source inventory
{
	type = pgsql
	sql_host = 127.0.0.1
	sql_user = gmc_app
	sql_pass = ytl2Efo8bcqQnPJ
	sql_db = gmc

	sql_query = \
		SELECT *, \
			CASE WHEN collection IS NULL THEN 0 ELSE 1 END AS sort_collection, \
			CASE WHEN core IS NULL THEN 0 ELSE 1 END AS sort_core, \
			CASE WHEN location IS NULL THEN 0 ELSE 1 END AS sort_location, \
			CASE WHEN set IS NULL THEN 0 ELSE 1 END AS sort_set, \
			CASE WHEN top IS NULL THEN 0 ELSE 1 END AS sort_top, \
			CASE WHEN bottom IS NULL THEN 0 ELSE 1 END AS sort_bottom, \
			CASE WHEN sort_box IS NULL THEN 0 ELSE 1 END AS sort_box_null, \
			CASE WHEN barcode IS NULL THEN 0 ELSE 1 END AS sort_barcode, \
			CASE WHEN sort_borehole IS NULL THEN 0 ELSE 1 END AS sort_borehole_null, \
			CASE WHEN sort_prospect IS NULL THEN 0 ELSE 1 END AS sort_prospect_null, \
			CASE WHEN sort_well IS NULL THEN 0 ELSE 1 END AS sort_well_null, \
			CASE WHEN sort_well_number IS NULL THEN 0 ELSE 1 END AS sort_well_number_null, \
			CASE WHEN barcode IS NULL AND alt_barcode IS NULL THEN 'barcodemissing' ELSE '' END AS barcodestate \
		FROM ( \
			SELECT iv.inventory_id, iv.sample_number AS sample, \
				iv.state_number AS state, \
				iv.box_number AS box, \
				CASE \
					WHEN iv.box_number ~ E'^\\d+$' \
					THEN CAST(iv.box_number AS int) \
					ELSE null \
				END AS sort_box, \
				barcode, \
				regexp_replace(iv.barcode, '[^\d]', '', 'g') AS barcode_number, \
				alt_barcode, \
				iv.active, \
				iv.core_number AS core, \
				iv.set_number AS set, \
				iv.interval_top AS top, \
				iv.interval_bottom AS bottom, \
				cl.name AS collection, \
				( \
					SELECT wl.name \
					FROM inventory_well AS iw \
					JOIN well AS wl ON wl.well_id = iw.well_id \
					WHERE iw.inventory_id = iv.inventory_id \
					ORDER BY LOWER(wl.name) \
					LIMIT 1 \
				) AS sort_well, ( \
					SELECT wl.well_number \
					FROM inventory_well AS iw \
					JOIN well AS wl ON wl.well_id = iw.well_id \
					WHERE iw.inventory_id = iv.inventory_id \
						AND wl.well_number IS NOT NULL \
					ORDER BY LOWER(wl.well_number) \
					LIMIT 1 \
				) AS sort_well_number, ( \
					SELECT bh.name \
					FROM inventory_borehole AS ib \
					JOIN borehole AS bh ON bh.borehole_id = ib.borehole_id \
					WHERE ib.inventory_id = iv.inventory_id \
					ORDER BY LOWER(bh.name) \
					LIMIT 1 \
				) AS sort_borehole, ( \
					SELECT ph.name \
					FROM inventory_borehole AS ib \
					JOIN borehole AS bh ON bh.borehole_id = ib.borehole_id \
					JOIN prospect AS ph ON ph.prospect_id = bh.prospect_id \
					WHERE ib.inventory_id = iv.inventory_id \
					ORDER BY LOWER(ph.name) \
					LIMIT 1 \
				) AS sort_prospect, ( \
					SELECT location \
					FROM inventory_location AS il \
					WHERE il.inventory_id = iv.inventory_id \
					LIMIT 1 \
				) AS location \
			FROM inventory AS iv \
			LEFT OUTER JOIN collection AS cl \
				ON cl.collection_id = iv.collection_id \
		) AS q

		sql_joined_field = well_number FROM query; \
			SELECT iw.inventory_id, wl.well_number \
			FROM inventory_well AS iw \
			JOIN well AS wl ON wl.well_id = iw.well_id \
			WHERE wl.well_number IS NOT NULL \
			ORDER BY iw.inventory_id ASC

		sql_joined_field = well FROM query; \
			SELECT iw.inventory_id, \
				wl.name || ' ' || COALESCE(wl.alt_names, '') \
			FROM inventory_well AS iw \
			JOIN well AS wl ON wl.well_id = iw.well_id \
			ORDER BY iw.inventory_id ASC

		sql_joined_field = borehole FROM query; \
			SELECT ib.inventory_id, \
				bh.name || ' ' || COALESCE(bh.alt_names, '') \
			FROM inventory_borehole AS ib \
			JOIN borehole AS bh ON bh.borehole_id = ib.borehole_id \
			ORDER BY ib.inventory_id ASC

		sql_joined_field = prospect FROM query; \
			SELECT ib.inventory_id, \
				ph.name || ' ' || COALESCE(ph.alt_names, '') \
			FROM inventory_borehole AS ib \
			JOIN borehole AS bh ON bh.borehole_id = ib.borehole_id \
			JOIN prospect AS ph ON ph.prospect_id = bh.prospect_id \
			ORDER BY ib.inventory_id ASC

		sql_joined_field = ardf FROM query; \
			SELECT ib.inventory_id, ph.ardf_number \
			FROM inventory_borehole AS ib \
			JOIN borehole AS bh ON bh.borehole_id = ib.borehole_id \
			JOIN prospect AS ph ON ph.prospect_id = bh.prospect_id \
			WHERE ph.ardf_number IS NOT NULL \
			ORDER BY ib.inventory_id ASC

		sql_joined_field = outcrop FROM query; \
			SELECT io.inventory_id, oc.name \
			FROM inventory_outcrop AS io \
			JOIN outcrop AS oc ON oc.outcrop_id = io.outcrop_id \
			ORDER BY io.inventory_id ASC

		sql_joined_field = stratigraphy FROM query; \
			SELECT iw.inventory_id, sg.name \
			FROM inventory_well AS iw \
			JOIN well_stratigraphy AS ws ON ws.well_id = iw.well_id \
			JOIN stratigraphy AS sg ON sg.stratigraphy_id = ws.stratigraphy_id \
			ORDER BY iw.inventory_id ASC

		sql_joined_field = api FROM query; \
			SELECT iw.inventory_id, wl.api_number \
			FROM inventory_well AS iw \
			JOIN well AS wl ON wl.well_id = iw.well_id \
			WHERE wl.api_number IS NOT NULL \
			ORDER BY iw.inventory_id ASC

		sql_joined_field = keyword FROM query; \
			SELECT ik.inventory_id, kw.name \
			FROM inventory_keyword AS ik \
			JOIN keyword AS kw ON kw.keyword_id = ik.keyword_id \
			ORDER BY ik.inventory_id ASC

		sql_joined_field = publication FROM query; \
			SELECT ip.inventory_id, pb.title \
			FROM inventory_publication AS ip \
			JOIN publication AS pb ON pb.publication_id = ip.publication_id \
			ORDER BY ip.inventory_id ASC

		sql_attr_multi = uint keyword_id FROM query; \
			SELECT ik.inventory_id, ik.keyword_id \
			FROM inventory_keyword AS ik \
			ORDER BY ik.inventory_id ASC

		sql_attr_multi = uint borehole_id FROM query; \
			SELECT ib.inventory_id, ib.borehole_id \
			FROM inventory_borehole AS ib \
			ORDER BY ib.inventory_id ASC

		sql_attr_multi = uint prospect_id FROM query; \
			SELECT ib.inventory_id, bh.prospect_id \
			FROM inventory_borehole AS ib \
			JOIN borehole AS bh ON bh.borehole_id = ib.borehole_id \
			WHERE bh.prospect_id IS NOT NULL \
			ORDER BY ib.inventory_id ASC

		sql_attr_multi = uint well_id FROM query; \
			SELECT iw.inventory_id, iw.well_id \
			FROM inventory_well AS iw \
			ORDER BY iw.inventory_id ASC

		sql_attr_multi = uint outcrop_id FROM query; \
			SELECT io.inventory_id, io.outcrop_id \
			FROM inventory_outcrop AS io \
			ORDER BY io.inventory_id ASC

		sql_attr_multi = uint mining_district_id FROM query; \
			SELECT inventory_id, mining_district_id \
			FROM inventory_mining_district \
			ORDER BY inventory_id ASC


		sql_attr_bool = active

		sql_attr_uint = sort_box
		sql_attr_uint = sort_box_null
		sql_field_string = barcode_number
		sql_field_string = barcode
		sql_attr_uint = sort_barcode
		sql_field_string = collection
		sql_attr_uint = sort_collection
		sql_field_string = core
		sql_attr_uint = sort_core
		sql_field_string = location
		sql_attr_uint = sort_location
		sql_field_string = set
		sql_attr_uint = sort_set
		sql_attr_uint = top
		sql_attr_uint = sort_top
		sql_attr_uint = bottom
		sql_attr_uint = sort_bottom

		sql_attr_string = sort_borehole
		sql_attr_uint = sort_borehole_null
		sql_attr_string = sort_prospect
		sql_attr_uint = sort_prospect_null
		sql_attr_string = sort_well
		sql_attr_uint = sort_well_null
		sql_attr_string = sort_well_number
		sql_attr_uint = sort_well_number_null
}


index inventory
{
	source = inventory
	path = /var/lib/sphinx/inventory
	docinfo = extern
	charset_type = sbcs
	enable_star = 1
	min_prefix_len = 1
}
