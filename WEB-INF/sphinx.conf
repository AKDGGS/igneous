source inventory
{
	type = pgsql
	sql_host = 127.0.0.1
	sql_user = gmc_app
	sql_pass = ytl2Efo8bcqQnPJ
	sql_db = gmc

	sql_query = \
		SELECT *, \
			CASE WHEN collection IS NULL THEN 0 ELSE 1 END AS sort_collection, \
			CASE WHEN core IS NULL THEN 0 ELSE 1 END AS sort_core, \
			CASE WHEN location IS NULL THEN 0 ELSE 1 END AS sort_location, \
			CASE WHEN set IS NULL THEN 0 ELSE 1 END AS sort_set, \
			COALESCE(top, 99999999) AS sort_top, \
			COALESCE(bottom, 99999999) AS sort_bottom, \
			CASE WHEN well IS NULL THEN 0 ELSE 1 END AS sort_well, \
			CASE WHEN well_number IS NULL THEN 0 ELSE 1 END AS sort_well_number \
		FROM ( \
			SELECT iv.inventory_id, iv.sample_number AS sample, \
				iv.state_number AS state, iv.box_number AS box, \
				iv.barcode, iv.active, \
				iv.core_number AS core, \
				iv.set_number AS set, \
				iv.interval_top AS top, \
				iv.interval_bottom AS bottom, \
				cl.name AS collection, \
				( \
					SELECT STRING_AGG( \
						COALESCE(ph.name,'') || ' ' || COALESCE(ph.alt_names,''), ' ' \
					) \
					FROM borehole AS bh \
					JOIN inventory_borehole AS ib \
						ON bh.borehole_id = ib.borehole_id \
					JOIN prospect AS ph \
						ON ph.prospect_id = bh.prospect_id \
					WHERE ib.inventory_id = iv.inventory_id \
				) AS prospect, ( \
					SELECT STRING_AGG( \
						COALESCE(bh.name,'') || ' ' || COALESCE(bh.alt_names,''), ' ' \
						ORDER BY bh.name \
					) \
					FROM borehole AS bh \
					JOIN inventory_borehole AS ib \
						ON bh.borehole_id = ib.borehole_id \
					WHERE ib.inventory_id = iv.inventory_id \
				) AS borehole, ( \
					SELECT STRING_AGG(ph.ardf_number, ' ') \
					FROM borehole AS bh \
					JOIN inventory_borehole AS ib \
						ON bh.borehole_id = ib.borehole_id \
					JOIN prospect AS ph \
						ON ph.prospect_id = bh.prospect_id \
					WHERE ib.inventory_id = iv.inventory_id \
						AND ph.ardf_number IS NOT NULL \
				) AS ardf, ( \
					SELECT STRING_AGG( \
						COALESCE(w.name,'') || ' ' || COALESCE(w.alt_names,''), ' ' \
						ORDER BY w.name \
					) \
					FROM inventory_well AS iw \
					JOIN well AS w ON w.well_id = iw.well_id \
					WHERE iw.inventory_id = iv.inventory_id \
				) AS well, ( \
					SELECT STRING_AGG(w.well_number, ' ' ORDER BY w.well_number) \
					FROM inventory_well AS iw \
					JOIN well AS w ON w.well_id = iw.well_id \
					WHERE iw.inventory_id = iv.inventory_id \
						AND w.well_number IS NOT NULL \
				) AS well_number, ( \
					SELECT STRING_AGG(w.api_number, ' ' ORDER BY w.api_number) \
					FROM inventory_well AS iw \
					JOIN well AS w ON w.well_id = iw.well_id \
					WHERE iw.inventory_id = iv.inventory_id \
						AND w.api_number IS NOT NULL \
				) AS api, ( \
					SELECT STRING_AGG(h.name, ' ') \
					FROM inventory_well AS iw \
					JOIN well AS w ON w.well_id = iw.well_id \
					JOIN horizon AS h ON h.well_id = w.well_id \
					WHERE iw.inventory_id = iv.inventory_id \
				) AS horizon, ( \
					SELECT STRING_AGG(oc.name, ' ') \
					FROM inventory_outcrop AS io \
					JOIN outcrop AS oc ON oc.outcrop_id = io.outcrop_id \
					WHERE io.inventory_id = iv.inventory_id \
				) AS outcrop, ( \
					SELECT STRING_AGG(kw.name, ' ') \
					FROM keyword AS kw \
					JOIN inventory_keyword AS ik \
						ON ik.keyword_id = kw.keyword_id \
					WHERE ik.inventory_id = iv.inventory_id \
				) AS keyword, ( \
					SELECT location \
					FROM inventory_location AS il \
					WHERE il.inventory_id = iv.inventory_id \
				) AS location \
			FROM inventory AS iv \
			LEFT OUTER JOIN collection AS cl \
				ON cl.collection_id = iv.collection_id \
		) AS q

		sql_attr_bool = active
		sql_attr_uint = sort_collection
		sql_attr_uint = sort_core
		sql_attr_uint = sort_location
		sql_attr_uint = sort_set
		sql_attr_uint = sort_top
		sql_attr_uint = sort_bottom
		sql_attr_uint = sort_well
		sql_attr_uint = sort_well_number

		sql_field_string = collection
		sql_field_string = core
		sql_field_string = location
		sql_field_string = set
		sql_field_string = top
		sql_field_string = bottom
		sql_field_string = well
		sql_field_string = well_number
}


index inventory
{
	source = inventory
	path = /var/lib/sphinx/inventory
	docinfo = extern
	charset_type = sbcs
	enable_star = 1
	min_prefix_len = 1
}
