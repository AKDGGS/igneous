<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gov.alaska.dggs.igneous.Well">
	<sql id="getBy">
		SELECT w.well_id, w.name, w.alt_names, 
			w.well_number, w.api_number,
			w.is_onshore, w.is_federal,
			w.spud_date, w.completion_date,
			w.measured_depth, w.vertical_depth,
			w.elevation, w.elevation_kb,
			w.permit_status, w.completion_status, w.permit_number,
			w.unit
		FROM well AS w
	</sql>


	<select id="getByID" resultSetType="FORWARD_ONLY" parameterType="int" resultMap="WellMap">
		<include refid="getBy" />
		WHERE w.well_id = #{id}
	</select>


	<select id="getByInventoryID" resultSetType="FORWARD_ONLY" parameterType="int" resultMap="WellMap">
		<include refid="getBy" />
		JOIN inventory_well AS iw
			ON iw.well_id = w.well_id
		WHERE iw.inventory_id = #{id}
	</select>

	<resultMap id="WellMap" type="Well">
		<id property="id" column="well_id" />

		<result property="name" column="name" />
		<result property="alt_names" column="alt_names" />
		<result property="well_number" column="well_number" />
		<result property="api_number" column="api_number" />
		<result property="is_onshore" column="is_onshore" />
		<result property="is_federal" column="is_federal" />
		<result property="spud_date" column="spud_date" />
		<result property="completion_date" column="completion_date" />
		<result property="measured_depth" column="measured_depth" />
		<result property="vertical_depth" column="vertical_depth" />
		<result property="elevation" column="elevation" />
		<result property="permit_status" column="permit_status" />
		<result property="completion_status" column="completion_status" />
		<result property="permit_number" column="permit_number" />
		<result property="unit" column="unit" />
		<collection property="operators" column="well_id"
			ofType="Organization" select="gov.alaska.dggs.igneous.Organization.getByWellID" />
		<collection property="notes" column="well_id"
			ofType="Note" select="gov.alaska.dggs.igneous.Note.getByWellID" />
		<collection property="urls" column="well_id"
			ofType="URL" select="gov.alaska.dggs.igneous.URL.getByWellID" />
		<collection property="files" column="well_id"
			ofType="File" select="gov.alaska.dggs.igneous.File.getByWellID" />
	</resultMap>


	<select id="getPointList" resultSetType="FORWARD_ONLY" resultType="Map">
		SELECT
			w.name, w.well_id, ST_AsText(ST_SnapToGrid(geog::geometry, 0.00001)) AS geog 
		FROM
			well AS w
		JOIN (
			SELECT DISTINCT ON (well_id)
				well_id, geog
			FROM((
				SELECT well_id, geog
				FROM well_point AS wp
				JOIN point AS p
					ON p.point_id = wp.point_id
					WHERE geog IS NOT NULL
				) UNION ALL (
				SELECT well_id, geog
				FROM well_place AS wp
				JOIN place AS p
					ON p.place_id = wp.place_id
				WHERE p.geog IS NOT NULL
			)) AS q
		)AS wg ON wg.well_id = w.well_id
		JOIN (
			SELECT DISTINCT ON (well_id)
				well_id
			FROM inventory_well AS iw
			JOIN inventory AS i ON i.inventory_id = iw.inventory_id
			WHERE i.active = true AND i.can_publish = true
		) AS wi ON wi.well_id = w.well_id
	</select>

	<select id="getGeoJSONByID" resultSetType="FORWARD_ONLY" parameterType="int" resultType="String">
		SELECT ST_AsGeoJSON(q.geog, 5, 0) AS geojson
		FROM (
			SELECT wpo.well_id, po.geog
			FROM point AS po
			JOIN well_point AS wpo
				ON wpo.point_id = po.point_id
									
			UNION ALL

			SELECT wpl.well_id, pl.geog
			FROM place AS pl
			JOIN well_place AS wpl
				ON wpl.place_id = pl.place_id
			WHERE pl.geog IS NOT NULL

			UNION ALL

			SELECT wr.well_id, re.geog
			FROM region AS re
			JOIN well_region AS wr
				ON wr.region_id = re.region_id
			WHERE re.geog IS NOT NULL
		) AS q
		WHERE q.well_id = #{well_id}
		LIMIT 1
	</select>


	<insert id="insertStash" parameterType="String">
		INSERT INTO well (name, stash) VALUES ('Unknown', #{stash}::JSONB)
	</insert>
</mapper>
