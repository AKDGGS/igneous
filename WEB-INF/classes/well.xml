<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gov.alaska.dggs.igneous.Well">
	<sql id="getBy">
		SELECT w.well_id, w.name, w.alt_names, 
			w.well_number, w.api_number,
			w.is_onshore, w.is_federal,
			w.spud_date, w.completion_date,
			w.measured_depth, w.vertical_depth,
			w.elevation, w.elevation_kb,
			w.permit_status, w.completion_status,
			u.unit_id, u.name AS unit_name, u.abbr AS unit_abbr,
			u.description AS unit_description
	</sql>


	<select id="getByID" resultSetType="FORWARD_ONLY" parameterType="long" resultMap="WellMap">
		<include refid="getBy" />
		FROM well AS w
		LEFT OUTER JOIN unit AS u
			ON u.unit_id = w.unit_id
		WHERE w.well_id = #{id}
	</select>


	<select id="getByInventoryID" resultSetType="FORWARD_ONLY" parameterType="long" resultMap="WellMap">
		<include refid="getBy" />
		FROM inventory_well AS iw
		JOIN well AS w
			ON w.well_id = iw.well_id
		LEFT OUTER JOIN unit AS u
			ON u.unit_id = w.unit_id
		WHERE iw.inventory_id = #{id}
	</select>


	<resultMap id="WellMap" type="Well">
		<id property="id" column="well_id" />

		<result property="name" column="name" />
		<result property="well_number" column="well_number" />
		<result property="alt_names" column="alt_names" />
		<result property="api_number" column="api_number" />
		<result property="is_onshore" column="is_onshore" />
		<result property="is_federal" column="is_federal" />
		<result property="spud_date" column="spud_date" />
		<result property="completion_date" column="completion_date" />
		<result property="measured_depth" column="measured_depth" />
		<result property="vertical_depth" column="vertical_depth" />
		<result property="permit_status" column="permit_status" />
		<result property="completion_status" column="completion_status" />

		<association property="unit" javaType="Unit">
			<id property="id" column="unit_id" />
			<result property="abbr" column="unit_abbr" />
			<result property="name" column="unit_name" />
			<result property="description" column="unit_description" />
		</association>
	</resultMap>


	<!-- Query used exclusively by the Oil and Gas Report -->
	<select id="getOilGas" resultSetType="FORWARD_ONLY" resultType="HashMap">
		SELECT w.well_id, w.name AS well_name, w.well_number, w.api_number, (
			SELECT
				TRUNC(ST_Y(ll)::numeric, 4) || ', ' || TRUNC(ST_X(ll)::numeric, 4)
			FROM (
				SELECT wg.geog AS ll
				FROM well_geog_point AS wg
				WHERE wg.well_id = w.well_id
				LIMIT 1
			) AS q1
		) AS lonlat, q.name, q.top, q.bottom, q.total
		FROM well AS w 
		JOIN (
			SELECT iw.well_id, k.name, MIN(interval_top) AS top,
			MAX(interval_bottom) AS bottom, COUNT(i.inventory_id) AS total
			FROM inventory_well AS iw
			JOIN inventory AS i ON i.inventory_id = iw.inventory_id
			JOIN inventory_keyword AS ik ON ik.inventory_id = iw.inventory_id
			JOIN keyword AS k ON k.keyword_id = ik.keyword_id
			WHERE k.keyword_group_id = (
				SELECT keyword_group_id
				FROM keyword_group
				WHERE LOWER(name) = LOWER('sample source')
			) OR keyword_group_id = (
				SELECT keyword_group_id
				FROM keyword_group
				WHERE LOWER(name) = LOWER('sample material')
			) OR (
				k.name = 'residues'
				AND keyword_group_id = (
					SELECT keyword_group_id
					FROM keyword_group
					WHERE LOWER(name) = LOWER('sample type')
				)
			)
			GROUP BY iw.well_id, k.name

			UNION ALL

			SELECT well_id, 'data reports' AS name, null AS top,
				null AS bottom, COUNT(publication_id) AS total
			FROM (
				SELECT DISTINCT iw.well_id, ip.publication_id
				FROM inventory_well AS iw
				JOIN inventory_publication AS ip ON ip.inventory_id = iw.inventory_id
				JOIN publication AS p ON p.publication_id = ip.publication_id
				WHERE publication_series = 'Geologic Materials Center Data Report Publications'
			) AS q
			GROUP BY well_id
		) AS q ON q.well_id = w.well_id
		ORDER BY well_name, well_number, q.name
	</select>


	<select id="getInventorySummary" resultSetType="FORWARD_ONLY" parameterType="long" resultType="HashMap">
		SELECT k.keyword_id, k.name AS keyword,
			COUNT(*) AS count
		FROM inventory_well AS iw
		JOIN inventory_keyword AS ik
			ON ik.inventory_id = iw.inventory_id
		JOIN keyword AS k
			ON k.keyword_id = ik.keyword_id
		WHERE iw.well_id = #{well_id}
		GROUP BY k.keyword_id, k.name
		ORDER BY k.name
	</select>


	<select id="getWKT" resultSetType="FORWARD_ONLY" parameterType="long" resultType="HashMap">
		SELECT ST_AsText(ST_Transform(geog::GEOMETRY, 3857)) AS wkt
		FROM well_geog
		WHERE well_id = #{well_id}
		LIMIT 1
	</select>
</mapper>
