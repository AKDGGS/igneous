<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gov.alaska.dggs.igneous.Prospect">
	<select id="getByID" resultSetType="FORWARD_ONLY" parameterType="int" resultMap="ProspectMap">
		SELECT prospect_id, name, alt_names, ardf_number
		FROM prospect
		WHERE prospect_id = #{id}
	</select>

	<resultMap id="ProspectMap" type="Prospect">
		<id property="id" column="prospect_id" />

		<result property="name" column="name" />
		<result property="alt_names" column="alt_names" />
		<result property="ardf" column="ardf_number" />

		<collection property="boreholes" column="prospect_id" ofType="Borehole"
			javaType="List" select="gov.alaska.dggs.igneous.Borehole.getByProspectID" />
	</resultMap>


	<select id="getInventorySummary" resultSetType="FORWARD_ONLY" parameterType="long" resultType="HashMap">
		(
			SELECT 1 AS type, keyword_id::varchar AS ids,
				name AS keywords, COUNT(*) AS count
			FROM (
				SELECT k.keyword_id, k.name
				FROM borehole AS b
				JOIN inventory_borehole AS ib ON ib.borehole_id = b.borehole_id
				JOIN inventory_keyword AS ik ON ik.inventory_id = ib.inventory_id
				JOIN keyword AS k ON k.keyword_id = ik.keyword_id
				WHERE b.prospect_id = #{id}
				ORDER BY ib.inventory_id, LOWER(k.name)
			) AS q1
			GROUP BY keyword_id, name
			ORDER BY keywords

		) UNION ALL (

			SELECT 2 AS type, ids, keywords,
				COUNT(*) AS count
			FROM (
				SELECT
					STRING_AGG(k.keyword_id::varchar, ',' ORDER BY LOWER(k.name)) AS ids,
					STRING_AGG(k.name, '; ' ORDER BY LOWER(k.name)) AS keywords,
					ib.inventory_id
				FROM borehole AS b
				JOIN inventory_borehole AS ib ON ib.borehole_id = b.borehole_id
				JOIN inventory_keyword AS ik ON ik.inventory_id = ib.inventory_id
				JOIN keyword AS k ON k.keyword_id = ik.keyword_id
				WHERE b.prospect_id = #{id}
				GROUP BY ib.inventory_id
			) AS q2
			GROUP BY keywords, ids
		)
	</select>


	<select id="getCoreDiameters" resultSetType="FORWARD_ONLY" parameterType="long" resultMap="CoreDiameterMap">
		SELECT DISTINCT
			cd.core_diameter_id, cd.core_diameter, cd.name,
			un.unit_id, un.name AS unit_name, un.abbr
		FROM borehole AS bh
		JOIN inventory_borehole AS ib ON ib.borehole_id = bh.borehole_id
		JOIN inventory AS iv ON iv.inventory_id = ib.inventory_id
		JOIN core_diameter AS cd ON cd.core_diameter_id = iv.core_diameter_id
		LEFT OUTER JOIN unit AS un ON un.unit_id = cd.unit_id
		WHERE bh.prospect_id = #{id}
		ORDER BY cd.core_diameter
	</select>

	<resultMap id="CoreDiameterMap" type="CoreDiameter">
		<id property="id" column="core_diameter_id" />
		<result property="name" column="name" />
		<result property="diameter" column="core_diameter" />

		<association property="unit" javaType="Unit">
			<id property="id" column="unit_id" />
			<result property="name" column="unit_name" />
			<result property="abbr" column="abbr" />
		</association>
	</resultMap>


	<select id="getWKT" resultSetType="FORWARD_ONLY" parameterType="long" resultType="HashMap">
		SELECT bh.borehole_id, bh.name, ST_AsText(bg.geom) AS wkt
		FROM borehole AS bh
		JOIN borehole_geom AS bg ON bh.borehole_id = bg.borehole_id
		WHERE bh.prospect_id = #{id}
	</select>


	<select id="getQuadrangles" resultSetType="FORWARD_ONLY" parameterType="long" resultMap="QuadrangleMap">
		SELECT DISTINCT
			qr.quadrangle_id, qr.name, qr.alt_name,
			qr.abbr, qr.alt_abbr, qr.scale
		FROM borehole AS bh
		JOIN borehole_geom AS bg ON bg.borehole_id = bh.borehole_id
		JOIN quadrangle AS qr ON ST_Intersects(qr.geom, bg.geom)
		WHERE bh.prospect_id = #{id} AND qr.scale = 250000
	</select>

	<resultMap id="QuadrangleMap" type="Quadrangle">
		<id property="id" column="quadrangle_id" />
		<result property="name" column="name" />
		<result property="alt_name" column="alt_name" />
		<result property="abbr" column="abbr" />
		<result property="alt_abbr" column="alt_abbr" />
		<result property="scale" column="scale" />
	</resultMap>


	<select id="getMiningDistricts" resultSetType="FORWARD_ONLY" parameterType="long" resultMap="MiningDistrictMap">
		SELECT DISTINCT 
			md.mining_district_id, md.name, md.region
		FROM borehole AS bh
		JOIN borehole_geom AS bg ON bg.borehole_id = bh.borehole_id
		JOIN mining_district AS md ON ST_Intersects(md.geom, bg.geom)
		WHERE bh.prospect_id = #{id}
	</select>

	<resultMap id="MiningDistrictMap" type="MiningDistrict">
		<id property="id" column="mining_district_id" />
		<result property="name" column="name" />
		<result property="region" column="region" />
	</resultMap>
</mapper>
