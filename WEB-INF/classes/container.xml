<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gov.alaska.dggs.igneous.Container">
	<update id="updateBarcode" parameterType="map">
		UPDATE container SET barcode = #{new_barcode}
		WHERE barcode = #{old_barcode}
	</update>


	<update id="updateAltBarcode" parameterType="map">
		UPDATE container SET barcode = #{new_barcode}
		WHERE alt_barcode = #{old_barcode}
	</update>


	<select id="getTotalsByBarcode" parameterType="String" resultType="HashMap">
		WITH RECURSIVE r AS (
			SELECT container_id, path_cache
			FROM container
			WHERE barcode = #{barcode}
				OR alt_barcode = #{barcode}
				OR barcode = 'GMC-' || #{barcode}

			UNION ALL

			SELECT co.container_id, co.path_cache
			FROM r
			JOIN container AS co
				ON r.container_id = co.parent_container_id
		)
		SELECT r.container_id, r.path_cache AS name,
			COUNT(DISTINCT COALESCE(iv.barcode, iv.alt_barcode, '*')) AS total
		FROM r
		JOIN inventory AS iv
			ON iv.container_id = r.container_id
		GROUP BY r.container_id, r.path_cache
		ORDER BY r.path_cache		
	</select>


	<select id="getCollectionTotalsByID" parameterType="List" resultType="HashMap">
		SELECT co.name AS collection,
			COUNT(DISTINCT COALESCE(iv.barcode, iv.alt_barcode, '*')) AS total
		FROM inventory AS iv
		JOIN collection AS co
			ON co.collection_id = iv.collection_id
		WHERE iv.active
			AND iv.container_id IN <foreach item="i" collection="list" open="(" separator="," close=")">${i}</foreach>
		GROUP BY co.name
	</select>


	<select id="getWellTotalsByID" parameterType="List" resultType="HashMap">
		SELECT we.name AS well,
			COUNT(DISTINCT COALESCE(iv.barcode, iv.alt_barcode, '*')) AS total
		FROM container AS co
		JOIN inventory AS iv
			ON iv.container_id = co.container_id
		JOIN inventory_well AS ivw
			ON ivw.inventory_id = iv.inventory_id
		JOIN well AS we
			ON we.well_id = ivw.well_id
		WHERE iv.active
			AND iv.container_id IN <foreach item="i" collection="list" open="(" separator="," close=")">${i}</foreach>
		GROUP BY we.name
	</select>


	<select id="getBoreholeTotalsByID" parameterType="List" resultType="HashMap">
		SELECT ps.name AS prospect,
			bh.name AS borehole,
			COUNT(DISTINCT COALESCE(iv.barcode, iv.alt_barcode, '*')) AS total
		FROM container AS co
		JOIN inventory AS iv
			ON iv.container_id = co.container_id
		JOIN inventory_borehole AS ivb
			ON ivb.inventory_id = iv.inventory_id
		JOIN borehole AS bh
			ON bh.borehole_id = ivb.borehole_id
		LEFT OUTER JOIN prospect AS ps
			ON ps.prospect_id = bh.prospect_id
		WHERE iv.active
			AND iv.container_id IN <foreach item="i" collection="list" open="(" separator="," close=")">${i}</foreach>
		GROUP BY ps.name, bh.name
		ORDER BY ps.name, bh.name
	</select>


	<select id="getKeywordSummaryByID" parameterType="List" resultType="String">
		SELECT STRING_AGG(name, ', ' ORDER BY keyword_group_id, name) AS keywords
		FROM keyword
		WHERE keyword_id IN (
			SELECT DISTINCT ik.keyword_id
			FROM inventory AS iv
			JOIN inventory_keyword AS ik
				ON iv.inventory_id = ik.inventory_id
			WHERE iv.active
				AND iv.container_id IN <foreach item="i" collection="list" open="(" separator="," close=")">${i}</foreach>
		)
		LIMIT 1
	</select>


	<select id="getShotlineTotalsByID" parameterType="List" resultType="HashMap">
		SELECT sl.name AS shotline,
			COUNT(DISTINCT COALESCE(iv.barcode, iv.alt_barcode, '*')) AS total
		FROM container AS co
		JOIN inventory AS iv
			ON iv.container_id = co.container_id
		JOIN inventory_shotpoint AS ivs
			ON ivs.inventory_id = iv.inventory_id
		JOIN shotpoint AS sp
			ON sp.shotpoint_id = ivs.shotpoint_id
		JOIN shotline AS sl
			ON sl.shotline_id = sp.shotline_id
		WHERE iv.active
			AND iv.container_id IN <foreach item="i" collection="list" open="(" separator="," close=")">${i}</foreach>
		GROUP BY co.container_id, sl.shotline_id, sl.name
	</select>
</mapper>
