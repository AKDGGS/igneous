<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gov.alaska.dggs.igneous.Keyword">
	<sql id="getBy">
		SELECT kw.keyword_id, kw.name, kw.alias, kw.description,
			kg.keyword_group_id, kg.name AS keyword_group_name
	</sql>


	<select id="getList" resultSetType="FORWARD_ONLY" resultMap="KeywordMap">
		<include refid="getBy" />
		FROM keyword AS kw
		LEFT OUTER JOIN keyword_group AS kg
			ON kg.keyword_group_id = kw.keyword_group_id
		ORDER BY kw.name
	</select>


	<select id="getByName" resultSetType="FORWARD_ONLY" parameterType="String" resultMap="KeywordMap">
		<include refid="getBy" />
		FROM keyword AS kw
		LEFT OUTER JOIN keyword_group AS kg
			ON kg.keyword_group_id = kw.keyword_group_id
		WHERE kw.name = #{name}
		LIMIT 1
	</select>


	<select id="getByID" resultSetType="FORWARD_ONLY" parameterType="int" resultMap="KeywordMap">
		<include refid="getBy" />
		FROM keyword AS kw
		LEFT OUTER JOIN keyword_group AS kg
			ON kg.keyword_group_id = kw.keyword_group_id
		WHERE kw.keyword_id = #{id}
		LIMIT 1
	</select>


	<select id="getByInventoryID" resultSetType="FORWARD_ONLY" parameterType="int" resultMap="KeywordMap">
		<include refid="getBy" />
		FROM inventory_keyword AS ik
		JOIN keyword AS kw ON kw.keyword_id = ik.keyword_id
		JOIN keyword_group AS kg
			ON kg.keyword_group_id = kw.keyword_group_id
		WHERE ik.inventory_id = #{id}
	</select>


	<resultMap id="KeywordMap" type="Keyword">
		<id property="id" column="keyword_id" />
		<result property="name" column="name" />
		<result property="alias" column="alias" />
		<result property="description" column="description" />

		<association property="group" javaType="KeywordGroup">
			<id property="id" column="keyword_group_id" />
			<result property="name" column="keyword_group_name" />
		</association>
	</resultMap>


	<select id="getGroupsByWellID" resultSetType="FORWARD_ONLY" parameterType="int" resultType="HashMap">
		SELECT ids, keywords, COUNT(*) AS count
		FROM (
			SELECT
				STRING_AGG(k.keyword_id::varchar, ',' ORDER BY k.keyword_group_id, LOWER(k.name)) AS ids,
				STRING_AGG(k.name, ' > ' ORDER BY k.keyword_group_id, LOWER(k.name)) AS keywords,
				iw.inventory_id
			FROM inventory_well AS iw
			JOIN inventory_keyword AS ik ON ik.inventory_id = iw.inventory_id
			JOIN keyword AS k ON k.keyword_id = ik.keyword_id
			WHERE iw.well_id = #{id}
			GROUP BY iw.inventory_id
		) AS q2
		GROUP BY keywords, ids
		ORDER BY keywords
	</select>
</mapper>
