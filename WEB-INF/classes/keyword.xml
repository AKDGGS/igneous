<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gov.alaska.dggs.igneous.Keyword">
	<select id="getList" resultSetType="FORWARD_ONLY" resultType="String">
		SELECT UNNEST(ENUM_RANGE(null::keyword))::TEXT AS keyword
		ORDER BY keyword
	</select>

	<select id="getGroupsByWellID" resultSetType="FORWARD_ONLY" parameterType="int" resultType="HashMap">
		SELECT ARRAY_TO_STRING(keywords, ',') AS keywords,
			COUNT(q2.inventory_id) AS count
		FROM (
			SELECT q1.inventory_id,
				ARRAY_AGG(q1.keyword ORDER BY q1.keyword) AS keywords
			FROM ( 
				SELECT i.inventory_id, UNNEST(i.keywords) AS keyword
				FROM inventory_well AS iw
				JOIN inventory AS i
					ON i.inventory_id = iw.inventory_id
				WHERE i.active AND iw.well_id = #{id}
			) AS q1
			GROUP BY q1.inventory_id
		) AS q2
		GROUP BY q2.keywords
		ORDER BY q2.keywords
	</select>


	<select id="getGroupsByProspectID" resultSetType="FORWARD_ONLY" parameterType="int" resultType="HashMap">
		SELECT ARRAY_TO_STRING(keywords, ',') AS keywords,
			COUNT(q2.inventory_id) AS count
		FROM (
			SELECT q1.inventory_id,
				ARRAY_AGG(q1.keyword ORDER BY q1.keyword) AS keywords
			FROM ( 
				SELECT i.inventory_id, UNNEST(i.keywords) AS keyword
				FROM inventory_borehole AS ib
				JOIN borehole AS b
					ON b.borehole_id = ib.borehole_id
				JOIN inventory AS i
					ON i.inventory_id = ib.inventory_id
				WHERE i.active AND b.prospect_id = #{id}
			) AS q1
			GROUP BY q1.inventory_id
		) AS q2
		GROUP BY q2.keywords
		ORDER BY q2.keywords
	</select>


	<select id="getGroupsByBoreholeID" resultSetType="FORWARD_ONLY" parameterType="int" resultType="HashMap">
		SELECT ARRAY_TO_STRING(keywords, ',') AS keywords,
			COUNT(q2.inventory_id) AS count
		FROM (
			SELECT q1.inventory_id,
				ARRAY_AGG(q1.keyword ORDER BY q1.keyword) AS keywords
			FROM ( 
				SELECT i.inventory_id, UNNEST(i.keywords) AS keyword
				FROM inventory_borehole AS ib
				JOIN inventory AS i
					ON i.inventory_id = ib.inventory_id
				WHERE i.active AND ib.borehole_id = #{id}
			) AS q1
			GROUP BY q1.inventory_id
		) AS q2
		GROUP BY q2.keywords
		ORDER BY q2.keywords
	</select>


	<select id="getGroupsByOutcropID" resultSetType="FORWARD_ONLY" parameterType="int" resultType="HashMap">
		SELECT ARRAY_TO_STRING(keywords, ',') AS keywords,
			COUNT(q2.inventory_id) AS count
		FROM (
			SELECT q1.inventory_id,
				ARRAY_AGG(q1.keyword ORDER BY q1.keyword) AS keywords
			FROM ( 
				SELECT i.inventory_id, UNNEST(i.keywords) AS keyword
				FROM inventory_outcrop AS io
				JOIN inventory AS i
					ON i.inventory_id = io.inventory_id
				WHERE i.active AND io.outcrop_id = #{id}
			) AS q1
			GROUP BY q1.inventory_id
		) AS q2
		GROUP BY q2.keywords
		ORDER BY q2.keywords
	</select>


	<select id="getGroupsByShotlineID" resultSetType="FORWARD_ONLY" parameterType="int" resultType="HashMap">
		SELECT ARRAY_TO_STRING(keywords, ',') AS keywords,
			COUNT(q2.inventory_id) AS count
		FROM (
			SELECT q1.inventory_id,
				ARRAY_AGG(q1.keyword ORDER BY q1.keyword) AS keywords
			FROM ( 
				SELECT i.inventory_id, UNNEST(i.keywords) AS keyword
				FROM inventory_shotline AS isl
				JOIN inventory AS i
					ON i.inventory_id = isl.inventory_id
				WHERE i.active AND isl.shotline_id = #{id}
			) AS q1
			GROUP BY q1.inventory_id
		) AS q2
		GROUP BY q2.keywords
		ORDER BY q2.keywords
	</select>
</mapper>
