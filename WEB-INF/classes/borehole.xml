<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gov.alaska.dggs.igneous.Borehole">
	<select id="getByID" resultSetType="FORWARD_ONLY" parameterType="long" resultMap="BoreholeMap">
		SELECT bh.borehole_id, bh.prospect_id,
			bh.name AS borehole_name,
			bh.alt_names AS alt_borehole_names,
			bh.is_onshore, bh.completion_date,
			
			bh.measured_depth, mdu.unit_id AS mdu_unit_id,
			mdu.abbr AS mdu_unit_abbr, mdu.name AS mdu_unit_name,

			bh.elevation, evu.unit_id AS evu_unit_id,
			evu.abbr AS evu_unit_abbr, evu.name AS evu_unit_name
		FROM borehole AS bh
		LEFT OUTER JOIN unit AS mdu
			ON mdu.unit_id = measured_depth_unit_id
		LEFT OUTER JOIN unit AS evu
			ON evu.unit_id = elevation_unit_id
		WHERE bh.borehole_id = #{borehole_id}
	</select>

	<select id="getByProspectID" resultSetType="FORWARD_ONLY" parameterType="long" resultMap="BoreholeMap">
		SELECT bh.borehole_id,
			bh.name AS borehole_name,
			bh.alt_names AS alt_borehole_names,
			bh.is_onshore, bh.completion_date,
			
			bh.measured_depth, mdu.unit_id AS mdu_unit_id,
			mdu.abbr AS mdu_unit_abbr, mdu.name AS mdu_unit_name,

			bh.elevation, evu.unit_id AS evu_unit_id,
			evu.abbr AS evu_unit_abbr, evu.name AS evu_unit_name
		FROM borehole AS bh
		LEFT OUTER JOIN unit AS mdu
			ON mdu.unit_id = measured_depth_unit_id
		LEFT OUTER JOIN unit AS evu
			ON evu.unit_id = elevation_unit_id
		WHERE prospect_id = #{id}
		ORDER BY LOWER(bh.name)
	</select>

	<resultMap id="BoreholeMap" type="Borehole">
		<id property="id" column="borehole_id" />

		<result property="name" column="borehole_name" />
		<result property="alt_names" column="alt_borehole_names" />
		<result property="is_onshore" column="is_onshore" />
		<result property="completion" column="completion_date" />

		<result property="measured_depth" column="measured_depth" />
		<result property="elevation" column="elevation" />

		<association property="measured_depth_unit" javaType="Unit">
			<id property="id" column="mdu_unit_id" />
			<result property="abbr" column="mdu_unit_abbr" />
			<result property="name" column="mdu_unit_name" />
		</association>

		<association property="elevation_unit" javaType="Unit">
			<id property="id" column="evu_unit_id" />
			<result property="abbr" column="evu_unit_abbr" />
			<result property="name" column="evu_unit_name" />
		</association>

		<association property="prospect" column="prospect_id" javaType="Prospect"
			select="gov.alaska.dggs.igneous.Prospect.getByID" />
	</resultMap>


	<select id="getInventorySummary" resultSetType="FORWARD_ONLY" parameterType="long" resultType="HashMap">
		(
			SELECT 1 AS type, keyword_id::varchar AS ids,
				name AS keywords, COUNT(*) AS count
			FROM (
				SELECT k.keyword_id, k.name
				FROM borehole AS b
				JOIN inventory_borehole AS ib ON ib.borehole_id = b.borehole_id
				JOIN inventory_keyword AS ik ON ik.inventory_id = ib.inventory_id
				JOIN keyword AS k ON k.keyword_id = ik.keyword_id
				WHERE b.borehole_id = #{id}
				ORDER BY ib.inventory_id, LOWER(k.name)
			) AS q1
			GROUP BY keyword_id, name
			ORDER BY keywords

		) UNION ALL (

			SELECT 2 AS type, ids, keywords,
				COUNT(*) AS count
			FROM (
				SELECT
					STRING_AGG(k.keyword_id::varchar, ',' ORDER BY LOWER(k.name)) AS ids,
					STRING_AGG(k.name, '; ' ORDER BY LOWER(k.name)) AS keywords,
					ib.inventory_id
				FROM borehole AS b
				JOIN inventory_borehole AS ib ON ib.borehole_id = b.borehole_id
				JOIN inventory_keyword AS ik ON ik.inventory_id = ib.inventory_id
				JOIN keyword AS k ON k.keyword_id = ik.keyword_id
				WHERE b.prospect_id = #{id}
				GROUP BY ib.inventory_id
			) AS q2
			GROUP BY keywords, ids
		)
	</select>

	<select id="getIDByWKT" resultSetType="FORWARD_ONLY" resultType="int">
		SELECT DISTINCT borehole_id FROM borehole_geom
		WHERE ST_Intersects(geom, ST_GeomFromText(#{wkt}, 3857))
	</select>
</mapper>
