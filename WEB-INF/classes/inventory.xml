<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gov.alaska.dggs.igneous.Inventory">
	<select id="getKeywords" resultSetType="FORWARD_ONLY" parameterType="int" resultMap="KeywordMap">
		SELECT k.keyword_id, k.name
		FROM inventory_keyword AS ik
		JOIN keyword AS k ON k.keyword_id = ik.keyword_id
		WHERE ik.inventory_id = #{id}
	</select>

	<resultMap id="KeywordMap" type="Keyword">
		<id property="id" column="keyword_id" />
		<result property="name" column="keyword_name" />
	</resultMap>


	<select id="getSearchResults" resultSetType="FORWARD_ONLY" resultMap="InventoryMap">
		SELECT iv.inventory_id, iv.sample_number, iv.barcode,
			iv.box_number, iv.set_number, iv.core_number, iv.state_number,
			iv.interval_top, iv.interval_bottom,
			iun.unit_id AS interval_unit_id,
			iun.name AS interval_unit_name,
			iun.abbr AS interval_unit_abbr,
			ibr.inventory_branch_id, ibr.name AS branch_name,
			ibr.description AS branch_description,
			cl.collection_id, cl.name AS collection_name,
			cl.description AS collection_description,
			cd.core_diameter_id, cd.name AS core_diameter_name,
			cd.core_diameter AS core_diameter_diameter,
			cdun.unit_id AS core_diameter_unit_id,
			cdun.name AS core_diameter_unit_name,
			cdun.abbr AS core_diameter_unit_abbr,

			bh.borehole_id,
			bh.name AS borehole_name,
			bh.alt_names AS alt_borehole_names,
			ph.prospect_id,
			ph.name AS prospect_name,
			ph.alt_names AS alt_prospect_names,
			ph.ardf_number,

			w.well_id, 
			w.name AS well_name,
			w.alt_names AS alt_well_names,
			w.well_number, w.api_number,
			(
				SELECT STRING_AGG(name, '/') FROM (
					WITH RECURSIVE t AS (
						(SELECT 0 AS level, co.container_id,
							co.parent_container_id, co.name
						FROM inventory_container AS ic
						JOIN container AS co ON co.container_id = ic.container_id
						WHERE ic.inventory_id = iv.inventory_id
						ORDER BY log_date DESC LIMIT 1)

						UNION ALL

						SELECT level+1, c.container_id, c.parent_container_id, c.name
						FROM container AS c
						JOIN t AS t ON c.container_id = t.parent_container_id
					) SELECT name FROM t ORDER BY level DESC
				) AS tree
			) AS container_path
		FROM inventory AS iv
		LEFT OUTER JOIN collection AS cl
			ON cl.collection_id = iv.collection_id
		LEFT OUTER JOIN unit AS iun
			ON iun.unit_id = iv.interval_unit_id
		LEFT OUTER JOIN inventory_borehole AS ibh
			ON ibh.inventory_id = iv.inventory_id
		LEFT OUTER JOIN borehole AS bh
			ON bh.borehole_id = ibh.borehole_id
		LEFT OUTER JOIN prospect AS ph
			ON ph.prospect_id = bh.prospect_id
		LEFT OUTER JOIN core_diameter AS cd
			ON cd.core_diameter_id = iv.core_diameter_id
		LEFT OUTER JOIN unit AS cdun
			ON cdun.unit_id = cd.unit_id
		LEFT OUTER JOIN inventory_well AS iw
			ON iw.inventory_id = iv.inventory_id
		LEFT OUTER JOIN well AS w
			ON w.well_id = iw.well_id
		JOIN inventory_branch AS ibr
			ON ibr.inventory_branch_id = iv.inventory_branch_id
		WHERE iv.inventory_id IN
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<resultMap id="InventoryMap" type="Inventory">
		<id property="id" column="inventory_id" />
		<result property="samplenumber" column="sample_number" />
		<result property="barcode" column="barcode" />
		<result property="container_path" column="container_path" />
		<result property="box" column="box_number" />
		<result property="set" column="set_number" />
		<result property="core" column="core_number" />
		<result property="state" column="state_number" />
		<result property="interval_top" column="interval_top" />
		<result property="interval_bottom" column="interval_bottom" />

		<association property="interval_unit" javaType="Unit">
			<id property="id" column="interval_unit_id" />
			<result property="abbr" column="interval_unit_abbr" />
			<result property="name" column="interval_unit_name" />
		</association>

		<association property="core_diameter" javaType="CoreDiameter">
			<id property="id" column="core_diameter_id" />
			<result property="name" column="core_diameter_name" />
			<result property="diameter" column="core_diameter_diameter" />

			<association property="unit" javaType="Unit">
				<id property="id" column="core_diameter_unit_id" />
				<result property="name" column="core_diameter_unit_name" />
				<result property="abbr" column="core_diameter_unit_abbr" />
			</association>
		</association>

		<association property="branch" javaType="InventoryBranch">
			<id property="id" column="branch_id" />
			<result property="name" column="branch_name" />
			<result property="description" column="branch_description" />
		</association>

		<association property="collection" javaType="iCollection">
			<id property="id" column="collection_id" />
			<result property="name" column="collection_name" />
			<result property="description" column="collection_description" />
		</association>

		<collection property="keywords" column="inventory_id" ofType="Keyword" select="getKeywords" />

		<collection property="boreholes" ofType="Borehole">
			<id property="id" column="borehole_id" />
			<result property="name" column="borehole_name" />
			<result property="alt_names" column="alt_borehole_names" />

			<association property="prospect" javaType="Prospect">
				<id property="id" column="prospect_id" />
				<result property="name" column="prospect_name" />
				<result property="alt_names" column="alt_prospect_names" />
				<result property="ardf" column="ardf_number" />
			</association>
		</collection>

		<collection property="wells" ofType="Well">
			<id property="id" column="well_id" />
			<result property="name" column="well_name" />
			<result property="alt_names" column="alt_well_names" />
			<result property="well_number" column="well_number" />
			<result property="api_number" column="api_number" />
		</collection>
	</resultMap>


	<select id="getByKeywordBorehole" resultSetType="FORWARD_ONLY" resultMap="InventoryMap">
		SELECT iv.inventory_id, iv.sample_number, iv.barcode,
			iv.box_number, iv.set_number, iv.core_number, iv.state_number,
			iv.interval_top, iv.interval_bottom,
			iun.unit_id AS interval_unit_id,
			iun.name AS interval_unit_name,
			iun.abbr AS interval_unit_abbr,
			(
				SELECT STRING_AGG(name, '/') FROM (
					WITH RECURSIVE t AS (
						(SELECT 0 AS level, co.container_id,
							co.parent_container_id, co.name
						FROM inventory_container AS ic
						JOIN container AS co ON co.container_id = ic.container_id
						WHERE ic.inventory_id = iv.inventory_id
						ORDER BY log_date DESC LIMIT 1)

						UNION ALL

						SELECT level+1, c.container_id, c.parent_container_id, c.name
						FROM container AS c
						JOIN t AS t ON c.container_id = t.parent_container_id
					) SELECT name FROM t ORDER BY level DESC
				) AS tree
			) AS container_path
		FROM inventory AS iv
		LEFT OUTER JOIN unit AS iun
			ON iun.unit_id = iv.interval_unit_id
		WHERE iv.inventory_id IN (
			SELECT DISTINCT ib.inventory_id
			FROM inventory_borehole AS ib
			JOIN inventory_keyword AS ik
				ON ik.inventory_id = ib.inventory_id
			<where>
				<if test="borehole_id != null">
					borehole_id = #{borehole_id}
				</if>

				<if test="keyword_ids != null">
					AND keyword_id IN
					<foreach item="keyword_id" index="index" collection="keyword_ids" open="(" separator="," close=")">
						#{keyword_id}
					</foreach>
				</if>
			</where>
		)
	</select>
</mapper>
